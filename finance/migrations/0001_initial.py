# Generated by Django 5.0 on 2025-01-19 15:13

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('school_setting', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FeeDiscountGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeDiscountModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('amount', 'AMOUNT'), ('percentage', 'PERCENTAGE')], max_length=20)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeGroupModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeMasterModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('same_termly_price', models.BooleanField(blank=True, default=True, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('first_term_amount', models.FloatField(blank=True, null=True)),
                ('second_term_amount', models.FloatField(blank=True, null=True)),
                ('third_term_amount', models.FloatField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('code', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('fee_occurrence', models.CharField(choices=[('termly', 'TERMLY'), ('annually', 'ANNUALLY'), ('one time', 'ONE TIME')], max_length=50)),
                ('payment_term', models.CharField(blank=True, choices=[('1st term', 'FIRST TERM'), ('2nd term', 'SECOND TERM'), ('3rd term', 'THIRD TERM'), ('any term', 'ANY TERM')], default='first term', max_length=50, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeePaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('payment_mode', models.CharField(choices=[('cash', 'CASH'), ('cheque', 'CHEQUE'), ('bank', 'BANK TELLER'), ('transfer', 'BANK TRANSFER')], max_length=20)),
                ('online_payment_method', models.CharField(blank=True, choices=[('paystack', 'PAYSTACK'), ('flutterwave', 'FLUTTERWAVE')], max_length=100, null=True)),
                ('vat', models.FloatField(blank=True, default=0, null=True)),
                ('date', models.DateField(blank=True, default=datetime.date(2025, 1, 19))),
                ('payment_proof', models.FileField(blank=True, null=True, upload_to='finance/fee_payment')),
                ('amount', models.FloatField()),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeePaymentSummaryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('payment_mode', models.CharField(choices=[('cash', 'CASH'), ('cheque', 'CHEQUE'), ('bank', 'BANK TELLER'), ('transfer', 'BANK TRANSFER')], max_length=20)),
                ('online_payment_method', models.CharField(blank=True, choices=[('paystack', 'PAYSTACK'), ('flutterwave', 'FLUTTERWAVE'), ('quickteller', 'QUICKTELLER'), ('interswitch', 'INTERSWITCH')], max_length=100, null=True)),
                ('vat', models.FloatField(default=0)),
                ('date', models.DateField(blank=True, default=datetime.date(2025, 1, 19))),
                ('payment_proof', models.FileField(blank=True, null=True, upload_to='finance/fee_payment')),
                ('amount', models.FloatField()),
                ('reference', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeePenaltyModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(choices=[('amount', 'AMOUNT'), ('percentage', 'PERCENTAGE')], max_length=20)),
                ('amount', models.FloatField(blank=True, null=True)),
                ('percentage', models.FloatField(blank=True, null=True)),
                ('date_reference', models.CharField(choices=[('days', 'DAYS FROM RESUMPTION'), ('date', 'SELECTED DATE')], max_length=20)),
                ('days_from_resumption', models.IntegerField(blank=True, null=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeRecordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('total_payable', models.FloatField()),
                ('total_paid', models.FloatField()),
                ('total_discount', models.FloatField(default=0)),
                ('total_penalty', models.FloatField(default=0)),
                ('total_balance', models.FloatField(default=0)),
                ('overall_balance', models.FloatField(default=0)),
                ('class_fee_record', models.JSONField(null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='FeeReminderModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField()),
                ('days_after_resumption', models.IntegerField(default=0)),
                ('number_of_reminders', models.IntegerField(default=0)),
                ('interval_in_days', models.IntegerField(default=0)),
                ('format', models.CharField(choices=[('sms', 'SMS'), ('email', 'EMAIL'), ('both', 'BOTH')], max_length=20)),
                ('method', models.CharField(choices=[('manual', 'MANUAL'), ('automatic', 'AUTOMATIC'), ('any', 'ANY')], max_length=20)),
                ('recipient', models.CharField(choices=[('student', 'STUDENT'), ('parent', 'PARENT'), ('both', 'BOTH')], max_length=20)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FeeReminderRecordModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('number_of_text_recipient', models.IntegerField(default=0)),
                ('number_of_email_recipient', models.IntegerField(default=0)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinanceSettingModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('use_discount', models.BooleanField(default=False)),
                ('use_penalty', models.BooleanField(default=False)),
                ('use_2fa_manual', models.BooleanField(default=False)),
                ('use_2fa_online', models.BooleanField(default=False)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('date', models.DateTimeField(blank=True, default=datetime.date(2025, 1, 19))),
                ('income_proof', models.FileField(blank=True, null=True, upload_to='finance/income')),
                ('term', models.CharField(blank=True, choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='IncomeSourceModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OnlinePaymentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('paystack', 'PAYSTACK'), ('flutterwave', 'FLUTTERWAVE')], max_length=250)),
                ('public_key', models.CharField(max_length=250)),
                ('private_key', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254)),
                ('vat', models.FloatField(default=0.0)),
                ('callback_url', models.URLField(blank=True, null=True)),
                ('webhook_url', models.URLField(blank=True, null=True)),
                ('key', models.CharField(blank=True, max_length=250, null=True)),
                ('status', models.CharField(blank=True, choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OutstandingFeeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=20)),
                ('total_amount', models.FloatField()),
                ('outstanding_amount', models.FloatField()),
                ('paid', models.FloatField(default=0)),
                ('balance', models.FloatField(null=True)),
                ('status', models.CharField(choices=[('active', 'ACTIVE'), ('inactive', 'INACTIVE')], default='active', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentIDGeneratorModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_id', models.IntegerField()),
                ('last_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('s', 'SUCCESS'), ('f', 'FAIL')], default='f', max_length=10)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PayrollModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.FloatField()),
                ('loan_deduction', models.FloatField()),
                ('other_deduction', models.FloatField()),
                ('bonus', models.FloatField()),
                ('payable', models.FloatField()),
                ('amount_paid', models.FloatField()),
                ('balance', models.FloatField()),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StaffBonusModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('subject', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StaffDeductionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('purpose', models.TextField(blank=True, null=True)),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='StaffLoanModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.FloatField()),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('confirmation_date', models.DateField(auto_now=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
                ('is_refunded', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategoryModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense_category_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BudgetModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('budget', models.FloatField()),
                ('term', models.CharField(choices=[('1st term', '1st Term'), ('2nd term', '2ndTerm'), ('3rd term', '3rd Term')], max_length=20)),
                ('date', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('pending', 'PENDING'), ('confirmed', 'CONFIRMED')], default='pending', max_length=20)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school_setting.sessionmodel')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expensecategorymodel')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseTypeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_types', to='finance.expensecategorymodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense_type_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.FloatField()),
                ('date', models.DateTimeField(blank=True, default=datetime.date(2025, 1, 19))),
                ('expense_proof', models.FileField(blank=True, null=True, upload_to='finance/expense')),
                ('term', models.CharField(blank=True, choices=[('1st term', '1st Term'), ('2nd term', '2nd Term'), ('3rd term', '3rd Term')], max_length=20)),
                ('type', models.CharField(blank=True, choices=[('pri', 'PRIMARY'), ('sec', 'SECONDARY'), ('mix', 'GENERAL')], max_length=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expensecategorymodel')),
                ('session', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='school_setting.sessionmodel')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expense_updated_by', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('expense_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='finance.expensetypemodel')),
            ],
        ),
    ]
